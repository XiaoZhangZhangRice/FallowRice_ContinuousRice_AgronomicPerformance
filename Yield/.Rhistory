library(lmerTest)
library(multcompView)
library(car)
library(Rmisc)
library(dplyr) #https://r4ds.had.co.nz/ (Chapter 3, Chapter 5, look at filter and select)
# https://bookdown.org/ansellbr/WEHI_tidyR_course_book/
library(stringr)
library(data.table)
library(GGally)
library(formatR)
library(readxl)
library(mgcv)
library(xlsx)
library(ggpubr)
master <- read_excel("master_yields.xlsx", sheet = 1)
master$Treatment <- master$Field
master <- mutate_if(master, is.character, as.factor)
master$NrateF <- as.factor(master$Nrate)
master$Year <- as.factor(master$Year)
master$Yield_Mgha <- master$Yield_kgha/1000
str(master)
ggplot(master, aes(y=Yield_Mgha, x=Nrate, color=Field))+
geom_point()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size= 9))
all_factors_model <- lm(Yield_Mgha~Year+Blk+NrateF+Field+Topdressed, data = master)
pls205_diagnostics(all_factors_model)
anova(all_factors_model)
master$main_plot <- paste(master$Blk, master$Treatment, sep="_")
master$modular <- paste(as.numeric(master$Blk)%%3, master$Treatment, sep = "_")
notopdress <- master %>% filter (Topdressed != 1)
yield_average <- notopdress
yield_2021 <- notopdress %>% filter (Year == "2021")
yield_2022 <- notopdress %>% filter (Year == "2022")
yield_2023 <- notopdress %>% filter (Year == "2023")
#checked datasets, all looks good.
test_model <- lmer(Yield_Mgha ~ Treatment*Year+NrateF+(1|Blk), data = yield_average)
summary(test_model)
anova(test_model)
#is singular is because
#this function automates the extraction of coefficients from quadratic models to calculate optimal N rates and maximum yields
optimal_N <- function(model) {
# Extract the coefficients
coefficients <- coef(model)
# Get the names of the terms to make sure we handle your model's naming conventions
term_names <- names(coefficients)
# Identify the names for the intercept, linear, and quadratic terms
intercept_term <- "(Intercept)"
linear_term <- term_names[grepl("^Nrate", term_names)]
quadratic_term <- term_names[grepl("I\\(Nrate\\^2\\)", term_names)]
# Ensure both linear and quadratic terms are found
if (length(linear_term) == 0 | length(quadratic_term) == 0) {
stop("The model must include both Nrate and I(Nrate^2) terms.")
}
# Extract individual coefficients
beta_0 <- coefficients[intercept_term]
beta_1 <- coefficients[linear_term]
beta_2 <- coefficients[quadratic_term]
# Calculate the optimal N rate (x value) where the slope is zero
x_optimal <- -beta_1 / (2 * beta_2)
# Calculate the corresponding y value at the optimal N rate
y_optimal <- beta_0 + beta_1 * x_optimal + beta_2 * x_optimal^2
# Return both x and y values as a list
return(list(x_optimal = x_optimal, y_optimal = y_optimal))
}
#this function automates the construction of quadratic models
run_all_models <- function() {
# Create an empty data frame to store the results
results <- data.frame(
Year = character(),
Treatment = character(),
Nrate_optimal = numeric(),
Yield_max = numeric(),
stringsAsFactors = FALSE
)
# Define the years and treatments
years <- c(2021, 2022, 2023, "average")
treatments <- c("CR", "FR")
# Loop through each year and treatment
for (year in years) {
for (treatment in treatments) {
# Construct the model name dynamically
model_formula <- as.formula(paste0("Yield_Mgha ~ Nrate + I(Nrate^2)"))
data_name <- paste0("yield_", year)
model_data <- get(data_name) %>% filter(Treatment == treatment)
# Fit the model for the current year and treatment
model <- lm(model_formula, data = model_data)
# Calculate optimal Nrate and maximum yield using the optimal_N function
optimal_values <- optimal_N(model)
# Add the results to the data frame
results <- rbind(results, data.frame(
Year = year,
Treatment = treatment,
Nrate_optimal = optimal_values$x_optimal,
Yield_max = optimal_values$y_optimal
))
}
}
return(results)
}
#Here are all the optimal N rates
optimal_results <- run_all_models()
optimal_results
optimal_results$Year <- as.factor(optimal_results$Year)
# 2021 dataframe
yield_2021_dataframe <- yield_2021 %>%
group_by(Treatment, Nrate) %>%
mutate(Yield_Mgha_se = sd(Yield_Mgha)/sqrt(3)) %>%
summarise(Yield_Mgha = mean(Yield_Mgha),
Yield_Mgha_se = mean(Yield_Mgha_se)) %>%
mutate(Year = "2021")%>%
left_join(optimal_results %>% select(Year, Treatment, Nrate_optimal), by = c("Year", "Treatment"))%>%
mutate(Nrate_optimal = round(Nrate_optimal))
# 2022 dataframe
yield_2022_dataframe <- yield_2022 %>%
group_by(Treatment, Nrate) %>%
mutate(Yield_Mgha_se = sd(Yield_Mgha)/sqrt(3)) %>%
summarise(Yield_Mgha = mean(Yield_Mgha),
Yield_Mgha_se = mean(Yield_Mgha_se)) %>%
mutate(Year = "2022")%>%
left_join(optimal_results %>% select(Year, Treatment, Nrate_optimal), by = c("Year", "Treatment"))%>%
mutate(Nrate_optimal = round(Nrate_optimal))
# 2023 dataframe
yield_2023_dataframe <- yield_2023 %>%
group_by(Treatment, Nrate) %>%
mutate(Yield_Mgha_se = sd(Yield_Mgha)/sqrt(3)) %>%
summarise(Yield_Mgha = mean(Yield_Mgha),
Yield_Mgha_se = mean(Yield_Mgha_se)) %>%
mutate(Year = "2023")%>%
left_join(optimal_results %>% select(Year, Treatment, Nrate_optimal), by = c("Year", "Treatment"))%>%
mutate(Nrate_optimal = round(Nrate_optimal))
# average dataframe
yield_average_dataframe <- yield_average %>%
group_by(Treatment, Nrate) %>%
mutate(Yield_Mgha_se = sd(Yield_Mgha)/sqrt(3)) %>%
summarise(Yield_Mgha = mean(Yield_Mgha),
Yield_Mgha_se = mean(Yield_Mgha_se)) %>%
mutate(Year = "average")%>%
left_join(optimal_results %>% select(Year, Treatment, Nrate_optimal), by = c("Year", "Treatment"))%>%
mutate(Nrate_optimal = round(Nrate_optimal))
model_2021 <- lmer(Yield_Mgha ~ NrateF*Treatment+(1|Treatment:Blk), data=yield_2021)
field_means_2021 = emmeans(model_2021,spec = 'Treatment',by = 'NrateF')
field_effects_2021 = contrast(field_means_2021, method = 'pairwise', adjust = "Tukey")
summary(field_effects_2021)
cld(field_means_2021)
emmeans(model_2021, ~ Treatment + NrateF)
cld_2021 <- cld(emmeans(model_2021, ~ Treatment + NrateF),adjust = "Tukey")
top_yields_2021 <- cld_2021 %>%
group_by(Treatment) %>%
filter(emmean == max(emmean)) %>%
ungroup()
cld_2021 <- cld(emmeans(model_2021, ~ Treatment + NrateF),adjust = "Sidak")
top_yields_2021 <- cld_2021 %>%
group_by(Treatment) %>%
filter(emmean == max(emmean)) %>%
ungroup()
cld_2021
top_yields_2021
cld_2021
field_effects_2021 = contrast(field_means_2021, method = 'pairwise', adjust = "Tukey")
summary(field_effects_2021)
library(knitr)
library(ggplot2)
theme_set(theme_bw())
library(emmeans)
library(multcomp)
library(PLS205)
library(lme4)
library(lmerTest)
library(multcompView)
library(car)
library(Rmisc)
library(dplyr) #https://r4ds.had.co.nz/ (Chapter 3, Chapter 5, look at filter and select)
# https://bookdown.org/ansellbr/WEHI_tidyR_course_book/
library(stringr)
library(data.table)
library(GGally)
library(formatR)
library(readxl)
library(mgcv)
library(xlsx)
library(ggpubr)
master <- read_excel("master_yields.xlsx", sheet = 1)
master$Treatment <- master$Field
master <- mutate_if(master, is.character, as.factor)
master$NrateF <- as.factor(master$Nrate)
master$Year <- as.factor(master$Year)
master$Yield_Mgha <- master$Yield_kgha/1000
str(master)
ggplot(master, aes(y=Yield_Mgha, x=Nrate, color=Field))+
geom_point()+
theme(axis.text.x = element_text(angle = 45, hjust = 1, size= 9))
all_factors_model <- lm(Yield_Mgha~Year+Blk+NrateF+Field+Topdressed, data = master)
pls205_diagnostics(all_factors_model)
anova(all_factors_model)
master$main_plot <- paste(master$Blk, master$Treatment, sep="_")
master$modular <- paste(as.numeric(master$Blk)%%3, master$Treatment, sep = "_")
notopdress <- master %>% filter (Topdressed != 1)
yield_average <- notopdress
yield_2021 <- notopdress %>% filter (Year == "2021")
yield_2022 <- notopdress %>% filter (Year == "2022")
yield_2023 <- notopdress %>% filter (Year == "2023")
#checked datasets, all looks good.
test_model <- lmer(Yield_Mgha ~ Treatment*Year+(1|Blk:Treatment), data = yield_average)
summary(test_model)
test_model <- lmer(Yield_Mgha ~ Treatment*Year+(1|Blk:Treatment), data = yield_average)
pls205_diagnostics(test_model, EU ="Blk:Treatment")
test_model <- lmer(Yield_Mgha ~ Treatment*Year+(1|Blk:Treatment:Year), data = yield_average)
pls205_diagnostics(test_model, EU ="Blk:Treatment")
pls205_diagnostics(test_model, EU ="Blk:Treatment:Year")
summary(test_model)
pls205_diagnostics(test_model, EU ="Blk:Treatment:Year")
test_model <- lmer(Yield_Mgha ~ Treatment*Year+(1|Blk:Treatment), data = yield_average)
pls205_diagnostics(test_model, EU ="Blk:Treatment")
anova(test_model)
anova(model_2021)
model_average <- lmer(Yield_Mgha ~ NrateF*Treatment+(1|Treatment:Blk), data=yield_average)
model_average <- lmer(Yield_Mgha ~ NrateF*Treatment+(1|Treatment:Blk), data=yield_average)
anova(model_average)
field_means_average = emmeans(model_average,spec = 'Treatment',by = 'NrateF')
field_means_average = emmeans(model_average,spec = 'Treatment',by = 'NrateF')
field_effects_average = contrast(field_means_average, method = 'pairwise', adjust = "Tukey")
summary(field_effects_average)
cld(field_means_average)
library(ggplot2)
theme_set(theme_bw())
library(emmeans)
library(multcomp)
library(PLS205)
library(lme4)
library(lmerTest)
library(multcompView)
library(car)
library(Rmisc)
library(dplyr) #https://r4ds.had.co.nz/ (Chapter 3, Chapter 5, look at filter and select)
library(stringr)
library(readxl)
library(writexl)
library(ggpubr)
#read data
master = read_excel('N_uptake_over_time.xlsx', sheet = 1)
master$Days <- as.numeric(master$Days)
master <- master %>% mutate_if(is.character, as.factor)
table(master$Stage)
table(master$Treatment)
table(master$Blk)
table(master$Year)
#dataset looks good and complete so lets have some fun huehuehue
str(master)
all_data_model <- lm(N_total_kgha ~ Year*Stage*Treatment*Nrate_kgha, data = master)
pls205_diagnostics(all_data_model)
anova(all_data_model)
N_zero <- master %>% filter(Nrate_kgha == 0)
N_zero_average <- N_zero
N_zero_2021 <- N_zero %>% filter(Year ==2021)
N_zero_2022 <- N_zero %>% filter(Year ==2022)
N_185 <-master %>% filter(Nrate_kgha == 185)
N_185_average <- N_185
N_185_2021 <- N_185 %>% filter(Year ==2021)
N_185_2022 <- N_185 %>% filter(Year ==2022)
N_zero_model_2021 <- lmer(N_total_kgha~Treatment*Stage+(1|Blk:Treatment), data = N_zero_2021)
anova(N_zero_model_2021)
summary(N_zero_model_2021)
pls205_diagnostics(N_zero_model_2021, EU="Blk:Treatment")
N_zero_means_2021 = emmeans(N_zero_model_2021,spec = 'Treatment',by = 'Stage')
N_zero_effects_2021 = contrast(N_zero_means_2021, method = 'pairwise', adjust = "tukey")
summary(N_zero_effects_2021)
N_zero_effects_2021_summary <-
as.data.frame(summary(N_zero_effects_2021)) %>%
mutate(
p_value = case_when(
p.value < 0.01 ~ "<0.01",           # For p-values less than 0.01
TRUE ~ sprintf("%.2f", p.value)     # Force two decimal places for all other p-values
)
)%>%
mutate(Days = case_when(
Stage %in% c("PI") ~ "47",
Stage %in% c("Heading") ~ "82",
Stage %in% c("Maturity") ~ "134",
TRUE ~ "Other" # This line handles cases where plot is not listed
)) %>%
mutate(Days =as.numeric(Days))
cld(N_zero_means_2021)
N_zero_graphing_2021 <- N_zero_2021 %>%
group_by(Treatment, Days) %>%
mutate(N_total_kgha_se = sd(N_total_kgha)/sqrt(3)) %>%
summarise(N_total_kgha = mean(N_total_kgha), N_total_kgha_se = mean(N_total_kgha_se))%>%
left_join(N_zero_effects_2021_summary %>% select(Days, p_value), by = "Days")
N_zero_graph_2021 <-
ggplot(N_zero_2021, aes(x=Days, y=N_total_kgha, color=Treatment))+
geom_point(data=N_zero_graphing_2021, size=2.5)+
geom_line(data=N_zero_graphing_2021)+
scale_color_manual(values=c("#0072B2","#FFCC66"), labels = c("Continuous rice (CR)", "Fallow rice (FR)"))+
scale_x_continuous(name="Days after seeding", limits = c(35, 145), expand = c(0, 0), breaks = seq(0, 150, by = 20))+
scale_y_continuous(name=expression("N Uptake (kg N ha"^{-1}*")"), limits = c(0, 255), expand = c(0, 0), breaks = seq(0, 250, by = 50))+
geom_errorbar(data=N_zero_graphing_2021, aes(ymin=N_total_kgha-N_total_kgha_se, ymax=N_total_kgha+N_total_kgha_se), width=3)+
#geom_vline(xintercept = c(41, 50, 78, 84, 121, 136), linetype = "dashed", color = "black") +
theme_classic()+
theme(axis.text = element_text(size = 14), axis.title = element_text(size=16))+
theme(legend.text = element_text(size = 12),legend.title = element_text(size = 14))+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))+
geom_text(data=N_zero_graphing_2021 %>% filter(Treatment == "FR"), aes(x=Days, y=N_total_kgha+N_total_kgha_se+10,
label=sprintf(p_value)), size=3, vjust=-0.5, color="black")+
ggtitle(expression("2021: 0 kg N ha"^{-1}*""))
N_zero_graph_2021
N_zero_model_2022 <- lmer(N_total_kgha~Treatment*Stage+(1|Blk:Treatment), data = N_zero_2022)
anova(N_zero_model_2022)
summary(N_zero_model_2022)
pls205_diagnostics(N_zero_model_2022, EU="Blk:Treatment")
N_zero_means_2022 = emmeans(N_zero_model_2022,spec = 'Treatment',by = 'Stage')
N_zero_effects_2022 = contrast(N_zero_means_2022, method = 'pairwise', adjust = "tukey")
summary(N_zero_effects_2022)
N_zero_effects_2022_summary <-
as.data.frame(summary(N_zero_effects_2022)) %>%
mutate(
p_value = case_when(
p.value < 0.01 ~ "<0.01",           # For p-values less than 0.01
TRUE ~ sprintf("%.2f", p.value)     # Force two decimal places for all other p-values
)
)%>%
mutate(Days = case_when(
Stage %in% c("PI") ~ "47",
Stage %in% c("Heading") ~ "82",
Stage %in% c("Maturity") ~ "134",
TRUE ~ "Other" # This line handles cases where plot is not listed
)) %>%
mutate(Days =as.numeric(Days))
cld(N_zero_means_2022)
N_zero_graphing_2022 <- N_zero_2022 %>%
group_by(Treatment, Days) %>%
mutate(N_total_kgha_se = sd(N_total_kgha)/sqrt(3)) %>%
summarise(N_total_kgha = mean(N_total_kgha), N_total_kgha_se = mean(N_total_kgha_se))%>%
left_join(N_zero_effects_2022_summary %>% select(Days, p_value), by = "Days")
N_zero_graph_2022 <-
ggplot(N_zero_2022, aes(x=Days, y=N_total_kgha, color=Treatment))+
geom_point(data=N_zero_graphing_2022, size=2.5)+
geom_line(data=N_zero_graphing_2022)+
scale_color_manual(values=c("#0072B2","#FFCC66"), labels = c("Continuous rice (CR)", "Fallow rice (FR)"))+
scale_x_continuous(name="Days after seeding", limits = c(35, 145), expand = c(0, 0), breaks = seq(0, 150, by = 20))+
scale_y_continuous(name=expression("N Uptake (kg N ha"^{-1}*")"), limits = c(0, 255), expand = c(0, 0), breaks = seq(0, 250, by = 50))+
geom_errorbar(data=N_zero_graphing_2022, aes(ymin=N_total_kgha-N_total_kgha_se, ymax=N_total_kgha+N_total_kgha_se), width=3)+
#geom_vline(xintercept = c(41, 50, 78, 84, 121, 136), linetype = "dashed", color = "black") +
theme_classic()+
theme(axis.text = element_text(size = 14), axis.title = element_text(size=16))+
theme(legend.text = element_text(size = 12),legend.title = element_text(size = 14))+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))+
geom_text(data=N_zero_graphing_2022 %>% filter(Treatment == "FR"), aes(x=Days, y=N_total_kgha+N_total_kgha_se+10,
label=sprintf(p_value)), size=3, vjust=-0.5, color="black")+
ggtitle(expression("2022: 0 kg N ha"^{-1}*""))
N_zero_graph_2022
N_zero_model_average <- lmer(N_total_kgha~Treatment*Stage+(1|Blk:Treatment), data = N_zero_average)
anova(N_zero_model_average)
summary(N_zero_model_average)
pls205_diagnostics(N_zero_model_average, EU="Blk:Treatment")
N_zero_means_average = emmeans(N_zero_model_average,spec = 'Treatment',by = 'Stage')
N_zero_effects_average = contrast(N_zero_means_average, method = 'pairwise', adjust = "tukey")
summary(N_zero_effects_average)
N_zero_effects_average_summary <-
as.data.frame(summary(N_zero_effects_average)) %>%
mutate(
p_value = case_when(
p.value < 0.01 ~ "<0.01",           # For p-values less than 0.01
TRUE ~ sprintf("%.2f", p.value)     # Force two decimal places for all other p-values
)
)%>%
mutate(Days = case_when(
Stage %in% c("PI") ~ "47",
Stage %in% c("Heading") ~ "82",
Stage %in% c("Maturity") ~ "134",
TRUE ~ "Other" # This line handles cases where plot is not listed
)) %>%
mutate(Days =as.numeric(Days))
cld(N_zero_means_average)
N_zero_graphing_average <- N_zero_average %>%
group_by(Treatment, Days) %>%
mutate(N_total_kgha_se = sd(N_total_kgha)/sqrt(6)) %>%
summarise(N_total_kgha = mean(N_total_kgha), N_total_kgha_se = mean(N_total_kgha_se))%>%
left_join(N_zero_effects_average_summary %>% select(Days, p_value), by = "Days")
N_zero_graph_average <-
ggplot(N_zero_average, aes(x=Days, y=N_total_kgha, color=Treatment))+
geom_point(data=N_zero_graphing_average, size=2.5)+
geom_line(data=N_zero_graphing_average)+
scale_color_manual(values=c("#0072B2","#FFCC66"), labels = c("Continuous rice (CR)", "Fallow rice (FR)"))+
scale_x_continuous(name="Days after seeding", limits = c(35, 145), expand = c(0, 0), breaks = seq(0, 150, by = 20))+
scale_y_continuous(name=expression("N Uptake (kg N ha"^{-1}*")"), limits = c(0, 255), expand = c(0, 0), breaks = seq(0, 250, by = 50))+
geom_errorbar(data=N_zero_graphing_average, aes(ymin=N_total_kgha-N_total_kgha_se, ymax=N_total_kgha+N_total_kgha_se), width=3)+
#geom_vline(xintercept = c(41, 50, 78, 84, 121, 136), linetype = "dashed", color = "black") +
theme_classic()+
theme(axis.text = element_text(size = 14), axis.title = element_text(size=16))+
theme(legend.text = element_text(size = 12),legend.title = element_text(size = 14))+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))+
geom_text(data=N_zero_graphing_average %>% filter(Treatment == "FR"), aes(x=Days, y=N_total_kgha+N_total_kgha_se+10,
label=sprintf(p_value)), size=3, vjust=-0.5, color="black")+
ggtitle(expression("Average: 0 kg N ha"^{-1}*""))
N_zero_graph_average
N_185_model_2021 <- lmer(N_total_kgha~Treatment*Stage+(1|Blk:Treatment), data = N_185_2021)
anova(N_185_model_2021)
summary(N_185_model_2021)
pls205_diagnostics(N_185_model_2021, EU="Blk:Treatment")
N_185_means_2021 = emmeans(N_185_model_2021,spec = 'Treatment',by = 'Stage')
N_185_effects_2021 = contrast(N_185_means_2021, method = 'pairwise', adjust = "tukey")
summary(N_185_effects_2021)
N_185_effects_2021_summary <-
as.data.frame(summary(N_185_effects_2021)) %>%
mutate(
p_value = case_when(
p.value < 0.01 ~ "<0.01",           # For p-values less than 0.01
TRUE ~ sprintf("%.2f", p.value)     # Force two decimal places for all other p-values
)
)%>%
mutate(Days = case_when(
Stage %in% c("PI") ~ "47",
Stage %in% c("Heading") ~ "82",
Stage %in% c("Maturity") ~ "134",
TRUE ~ "Other" # This line handles cases where plot is not listed
)) %>%
mutate(Days =as.numeric(Days))
cld(N_185_means_2021)
N_185_graphing_2021 <- N_185_2021 %>%
group_by(Treatment, Days) %>%
mutate(N_total_kgha_se = sd(N_total_kgha)/sqrt(3)) %>%
summarise(N_total_kgha = mean(N_total_kgha), N_total_kgha_se = mean(N_total_kgha_se))%>%
left_join(N_185_effects_2021_summary %>% select(Days, p_value), by = "Days")
N_185_graph_2021 <-
ggplot(N_185_2021, aes(x=Days, y=N_total_kgha, color=Treatment))+
geom_point(data=N_185_graphing_2021, size=2.5)+
geom_line(data=N_185_graphing_2021)+
scale_color_manual(values=c("#0072B2","#FFCC66"), labels = c("Continuous rice (CR)", "Fallow rice (FR)"))+
scale_x_continuous(name="Days after seeding", limits = c(35, 145), expand = c(0, 0), breaks = seq(0, 150, by = 20))+
scale_y_continuous(name=expression("N Uptake (kg N ha"^{-1}*")"), limits = c(0, 255), expand = c(0, 0), breaks = seq(0, 250, by = 50))+
geom_errorbar(data=N_185_graphing_2021, aes(ymin=N_total_kgha-N_total_kgha_se, ymax=N_total_kgha+N_total_kgha_se), width=3)+
#geom_vline(xintercept = c(41, 50, 78, 84, 121, 136), linetype = "dashed", color = "black") +
theme_classic()+
theme(axis.text = element_text(size = 14), axis.title = element_text(size=16))+
theme(legend.text = element_text(size = 12),legend.title = element_text(size = 14))+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))+
geom_text(data=N_185_graphing_2021 %>% filter(Treatment == "FR"), aes(x=Days, y=N_total_kgha+N_total_kgha_se+10,
label=sprintf(p_value)), size=3, vjust=-0.5, color="black")+
ggtitle(expression("2021: 185 kg N ha"^{-1}*""))
N_185_model_2022 <- lmer(N_total_kgha~Treatment*Stage+(1|Blk:Treatment), data = N_185_2022)
anova(N_185_model_2022)
summary(N_185_model_2022)
pls205_diagnostics(N_185_model_2022, EU="Blk:Treatment")
N_185_means_2022 = emmeans(N_185_model_2022,spec = 'Treatment',by = 'Stage')
N_185_effects_2022 = contrast(N_185_means_2022, method = 'pairwise', adjust = "tukey")
summary(N_185_effects_2022)
N_185_effects_2022_summary <-
as.data.frame(summary(N_185_effects_2022)) %>%
mutate(
p_value = case_when(
p.value < 0.01 ~ "<0.01",           # For p-values less than 0.01
TRUE ~ sprintf("%.2f", p.value)     # Force two decimal places for all other p-values
)
)%>%
mutate(Days = case_when(
Stage %in% c("PI") ~ "47",
Stage %in% c("Heading") ~ "82",
Stage %in% c("Maturity") ~ "134",
TRUE ~ "Other" # This line handles cases where plot is not listed
)) %>%
mutate(Days =as.numeric(Days))
cld(N_185_means_2022)
N_185_graphing_2022 <- N_185_2022 %>%
group_by(Treatment, Days) %>%
mutate(N_total_kgha_se = sd(N_total_kgha)/sqrt(3)) %>%
summarise(N_total_kgha = mean(N_total_kgha), N_total_kgha_se = mean(N_total_kgha_se))%>%
left_join(N_185_effects_2022_summary %>% select(Days, p_value), by = "Days")
N_185_graph_2022 <-
ggplot(N_185_2022, aes(x=Days, y=N_total_kgha, color=Treatment))+
geom_point(data=N_185_graphing_2022, size=2.5)+
geom_line(data=N_185_graphing_2022)+
scale_color_manual(values=c("#0072B2","#FFCC66"), labels = c("Continuous rice (CR)", "Fallow rice (FR)"))+
scale_x_continuous(name="Days after seeding", limits = c(35, 145), expand = c(0, 0), breaks = seq(0, 150, by = 20))+
scale_y_continuous(name=expression("N Uptake (kg N ha"^{-1}*")"), limits = c(0, 255), expand = c(0, 0), breaks = seq(0, 250, by = 50))+
geom_errorbar(data=N_185_graphing_2022, aes(ymin=N_total_kgha-N_total_kgha_se, ymax=N_total_kgha+N_total_kgha_se), width=3)+
#geom_vline(xintercept = c(41, 50, 78, 84, 121, 136), linetype = "dashed", color = "black") +
theme_classic()+
theme(axis.text = element_text(size = 14), axis.title = element_text(size=16))+
theme(legend.text = element_text(size = 12),legend.title = element_text(size = 14))+
theme(plot.title = element_text(hjust = 0.5, size = 20, face = "bold"))+
geom_text(data=N_185_graphing_2022 %>% filter(Treatment == "FR"), aes(x=Days, y=N_total_kgha+N_total_kgha_se+10,
label=sprintf(p_value)), size=3, vjust=-0.5, color="black")+
ggtitle(expression("2022: 185 kg N ha"^{-1}*""))
N_185_model_average <- lmer(N_total_kgha~Treatment*Stage*Year+(1|Blk:Treatment), data = N_185_average)
anova(N_185_model_average)
pls205_diagnostics(N_185_model_average, EU="Blk:Treatment")
N_185_means_average = emmeans(N_185_model_average,spec = 'Treatment',by = 'Stage')
N_185_effects_average = contrast(N_185_means_average, method = 'pairwise', adjust = "tukey")
summary(N_185_effects_average)
N_185_model_average <- lmer(N_total_kgha~Treatment*Stage+Year+(1|Blk:Treatment), data = N_185_average)
anova(N_185_model_average)
N_zero_model_average <- lmer(N_total_kgha~Treatment*Stage+Year+(1|Blk:Treatment), data = N_zero_average)
anova(N_zero_model_average)
test_model <- lmer(Yield_Mgha ~ Treatment*Year+(1|Blk:Treatment), data = yield_average)
pls205_diagnostics(test_model, EU ="Blk:Treatment")
summary(test_model)
anova(test_model)
all_data_model_lmer <- lmer(N_total_kgha ~ Year*Treatment+(1|Blk:Treatment), data = master)
master
all_data_model_lmer <- lmer(N_total_kgha ~ Year*Treatment+(as.factor(N_total_kgha))(1|Blk:Treatment), data = master)
master$Nrate_kgha_F <- as.factor(master$Nrate_kgha)
all_data_model_lmer <- lmer(N_total_kgha ~ Year*Treatment+Nrate_kgha_F(1|Blk:Treatment), data = master)
all_data_model_lmer <- lmer(N_total_kgha ~ Year*Treatment+Nrate_kgha_F+(1|Blk:Treatment), data = master)
pls205_diagnostics(all_data_model)
pls205_diagnostics(all_data_model_lmer)
all_data_model_lmer <- lmer(N_total_kgha ~ Year*Treatment+Nrate_kgha_F+(1|Blk:Treatment:all_data_model_lmer), data = master)
all_data_model_lmer <- lmer(N_total_kgha ~ Year*Treatment+Nrate_kgha_F+(1|Blk:Treatment:Nrate_kgha_F), data = master)
all_data_model_lmer
all_data_model_lmer <- lmer(N_total_kgha ~ Year*Treatment+Nrate_kgha_F+(1|Blk:Treatment:Nrate_kgha_F), data = master)
pls205_diagnostics(all_data_model_lmer, EU ="Blk:Treatment:Nrate_kgha_F")
anova(all_data_model)
anova(all_data_model)
model_all_years <- lmer(Yield_Mgha ~ Treatment*Year+(1|Blk:Treatment), data = yield_average)
